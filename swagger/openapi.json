{
  "openapi": "3.0.0",
  "info": {
    "title": "Your_pets",
    "version": "0.0.1"
  },
  "consumes": ["aplication/json", "multipart/form-data"],
  "produces": ["aplication/json", "multipart/form-data"],
  "servers": [
    {
      "url": "http://localhost:3001/api/"
    }
  ],

  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notices"
    },
    {
      "name": "Pets"
    },
    {
      "name": "Friends"
    },
    {
      "name": "News"
    }
  ],

  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Create a new user",
        "tags": ["Auth"],
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Succes created"
          },
          "400": {
            "description": "User creation error"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Auth"],
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succes created"
          },
          "400": {
            "description": "User creation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Log out user",
        "tags": ["Auth"],
        "operationId": "logOutUser",
        "parameters": [
          {
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6325b992520ae525b4233d1e90cd21a"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Succes log out"
          },
          "404": {
            "description": "Not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "summary": "Get information about the current user",
        "tags": ["Auth"],
        "operationId": "Get information about the current user",
        "parameters": [
          {
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Authorizations - The token issued to the current user."
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Information found"
          },
          "404": {
            "description": "Not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/user/{id}": {
      "put": {
        "summary": "Changing user's information",
        "tags": ["Auth"],
        "operationId": "Changing user's information",
        "parameters": [
          {
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Authorizations - The token issued to the current user."
            }
          },
          {
            "name": "id",
            "description": "User's id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "646263154adda6edf64a8ffa"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Changing_user"
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Information changed successfully"
          },
          "404": {
            "description": "Not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/avatar/{id}": {
      "put": {
        "summary": "Changing user's avatar",
        "tags": ["Auth"],
        "operationId": "Changing user's avatar",
        "parameters": [
          {
            "consumes": "multipart/form-data",
            "name": "avatarUrl",
            "in": "formData",
            "type": "file",
            "description": "Changing user's avatar"
          },
          {
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Authorizations - The token issued to the current user."
            }
          },
          {
            "name": "id",
            "description": "User's id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "646263154adda6edf64a8ffa"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Information changed successfully"
          },
          "404": {
            "description": "Not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/notices/": {
      "get": {
        "summary": "Get all notices",
        "tags": ["Notices"],
        "operationId": "Get all notices",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Notices"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Add notices",
        "tags": ["Notices"],
        "operationId": "Add notices",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notices"
              }
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Notices"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notices/{categories}": {
      "get": {
        "summary": "Get notices by category",
        "tags": ["Notices"],
        "operationId": "Get notices by category",
        "parameters": [
          {
            "name": "categories",
            "description": "categories",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "lost-found"
            }
          }
        ],
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Notices"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notices/{search}": {
      "get": {
        "summary": "Get notices by title",
        "tags": ["Notices"],
        "operationId": "Get notices by title",
        "parameters": [
          {
            "name": "title",
            "description": "title",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Search"
            }
          },
          {
            "name": "category",
            "description": "category",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "lost-found"
            }
          }
        ],
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Notices"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notices/{id}": {
      "get": {
        "summary": "Get one notices by id",
        "tags": ["Notices"],
        "operationId": "Get one notices by id",
        "parameters": [
          {
            "name": "id",
            "description": "id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64625b7bbd1b77c304194363"
            }
          }
        ],
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Notices"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/friends/": {
      "get": {
        "summary": "Get all friends",
        "tags": ["Friends"],
        "operationId": "Get all friends",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Friends"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/news/": {
      "get": {
        "summary": "Get all news",
        "tags": ["News"],
        "operationId": "Get all news",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/News"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/news/{search}": {
      "get": {
        "summary": "Get all news",
        "tags": ["News"],
        "operationId": "Get all news",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/News"
            }
          }
        },
        "parameters": [
          {
            "name": "title",
            "description": "title",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarUrl": {
            "type": "string",
            "description": "User's avatar"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "birthday": {
            "type": "string",
            "format": "2023-05-01T00:00:00.000Z",
            "description": "User's birthday"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "phone": {
            "type": "string",
            "description": "User's phone"
          },
          "id": {
            "type": "string",
            "description": "id"
          }
        },
        "example": {
          "email": "example@example.com",
          "avatarUrl": "//www.gravatar.com/avatar/6325b992520ae525b4233d1e90cd21ae",
          "name": "Example",
          "birthday": "00.00.0000",
          "city": "Kharkiv",
          "phone": "+38000000000",
          "id": "2323908423948392"
        }
      },
      "Auth": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "Password"
          }
        },
        "example": {
          "email": "example@example.com",
          "password": "Example12345"
        }
      },
      "Changing_user": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        },
        "example": {
          "email": "example@example.com",
          "phone": "+380993929499"
        }
      },
      "Notices": {
        "type": "object",
        "required": [
          "category",
          "title",
          "birthday",
          "name",
          "breed",
          "sex",
          "location"
        ],
        "properties": {
          "category": {
            "type": "string",
            "enum": ["sell", "lost-found", "for-free"],
            "description": "Category notices"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "birthday": {
            "type": "string",
            "description": "birthday"
          },
          "name": {
            "type": "string",
            "description": "name"
          },
          "breed": {
            "type": "string",
            "description": "Breed"
          },
          "sex": {
            "type": "string",
            "description": "sex"
          },
          "location": {
            "type": "string",
            "description": "location"
          },
          "comments": {
            "type": "string",
            "description": "comments"
          },
          "price": {
            "type": "number",
            "description": "price"
          }
        },
        "example": {
          "title": "selling a cat",
          "name": "Dog",
          "birthday": "13.05.2020",
          "breed": "scottish",
          "location": "Kiev",
          "sex": "male",
          "category": "lost-found",
          "price": "1000",
          "comments": "Test"
        }
      },
      "Friends": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "url": {
            "type": "string",
            "description": "url"
          },
          "adressUrl": {
            "type": "string",
            "description": "adressUrl"
          },
          "imageUrl": {
            "type": "string",
            "description": "imageUrl"
          },
          "adress": {
            "type": "string",
            "description": "adress"
          },
          "workDays": {
            "type": "object",
            "description": "workDays"
          },
          "phone": {
            "type": "string",
            "description": "phone"
          },
          "email": {
            "type": "string",
            "description": "email"
          }
        },
        "example": {
          "title": "Friends",
          "url": "url",
          "adressUrl": "url",
          "imageUrl": "url",
          "adress": "Kharkiv",
          "workDays": {
            "пн": "10:00-19:00"
          },
          "phone": "+380993929499",
          "email": "example@example.com"
        }
      },
      "News": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "text": {
            "type": "string",
            "description": "Text"
          },
          "url": {
            "type": "string",
            "description": "url"
          },
          "imgUrl": {
            "type": "string",
            "description": "imgUrl"
          },
          "date": {
            "type": "string",
            "description": "date"
          }
        },
        "example": {
          "title": "Friends",
          "text": "text",
          "url": "url",
          "imgUrl": "url",
          "date": "20-03-2023"
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
}
